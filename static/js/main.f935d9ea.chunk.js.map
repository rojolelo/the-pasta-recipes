{"version":3,"sources":["components/HomeHeader.js","components/SingleTopRecipe.js","components/Title.js","components/TopRecipes.js","components/AboutPasta.js","components/SingleRecipe.js","components/Catalogue.js","App.js","serviceWorker.js","index.js"],"names":["HomeHeader","header","route","react_default","a","createElement","className","react_router_dom","to","src","alt","id","type","this","props","location","pathname","Fragment","Component","SingleTopRecipe","concat","Title","children","TopRecipes","components_Title","components_SingleTopRecipe","AboutPasta","SingleRecipe","Catalogue","state","recipes","Boolean","_this","map","x","components_SingleRecipe","App","catalogue","boolean","setState","_this2","basename","process","react_router","exact","path","render","components_HomeHeader","showCatalogue","components_TopRecipes","components_AboutPasta","components_Catalogue","React","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f935d9ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HomeHeader extends Component {\r\n    header = route => {\r\n        if (route === \"/catalogue\") {\r\n            return (\r\n                <div className=\"homeHeader\">\r\n                    <Link to={\"/\"}>\r\n                        <img src=\"/imgs/logo.png\" alt=\"logo\" id=\"logo\" />\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"homeHeader\">\r\n                <Link to={\"/\"}>\r\n                    <img src=\"/imgs/logo.png\" alt=\"logo\" id=\"logo\" />\r\n                </Link>\r\n                <Link to={\"/catalogue\"}>\r\n                    <button type=\"button\" id=\"catalogue-button\">\r\n                        Check our catalogue\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const route = this.props.location.pathname;\r\n        return <React.Fragment>{this.header(route)}</React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default HomeHeader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//AN OBJECT MUST BE RECEIVED BY PROPS\r\nconst SingleTopRecipe = props => {\r\n    // const { title, imgPath } = props.object;\r\n    const title = \"Pastisio\";\r\n    const imgPath = \"pasticcio.png\";\r\n    return (\r\n        <div className=\"single-topRecipe\">\r\n            <div className=\"single-topRecipe-img\">\r\n                <Link to={`/`}>\r\n                    <img\r\n                        className=\"topRecipe-img\"\r\n                        src={`/imgs/${imgPath}`}\r\n                        alt=\"Pasticcio\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <p>{title}</p>\r\n\r\n            <button type=\"button\" id=\"single-recipe-button\">\r\n                Recipe\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleTopRecipe;\r\n","import React from \"react\";\r\n\r\nconst Title = props => {\r\n    return (\r\n        <div className=\"title\" id=\"subtitle\">\r\n            <h1>{props.children}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport SingleTopRecipe from \"./SingleTopRecipe\";\r\nimport Title from \"./Title\";\r\n\r\nclass TopRecipes extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"topRecipes-container\">\r\n                <Title>Top Recipes</Title>\r\n                <div className=\"topRecipes\">\r\n                    <SingleTopRecipe />\r\n                    <SingleTopRecipe />\r\n                    <SingleTopRecipe />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopRecipes;\r\n","import React from \"react\";\r\nimport Title from \"./Title\";\r\n\r\nconst AboutPasta = () => {\r\n    return (\r\n        <div className=\"aboutPasta-container\">\r\n            <Title>A little about Pasta</Title>\r\n            <div className=\"aboutPasta\">\r\n                <div className=\"facts\" id=\"fact1\">\r\n                    <div className=\"aboutPasta-content\">\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-utensils\" />\r\n                        </div>\r\n                        <p className=\"about-p\">\r\n                            It is a long established fact that a reader will be\r\n                            distracted by the readable content of a page when\r\n                            looking at its layout. The point of using Lorem\r\n                            Ipsum is that it has a more-or-less normal\r\n                            distribution of letters, as opposed to using\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"facts\" id=\"fact2\">\r\n                    <div className=\"aboutPasta-content\">\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-bacon\" />\r\n                        </div>\r\n                        <p className=\"about-p\">\r\n                            It is a long established fact that a reader will be\r\n                            distracted by the readable content of a page when\r\n                            looking at its layout. The point of using Lorem\r\n                            Ipsum is that it has a more-or-less normal\r\n                            distribution of letters, as opposed to using\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"facts\" id=\"fact3\">\r\n                    <div className=\"aboutPasta-content\">\r\n                        <div className=\"icon\">\r\n                            <i className=\"fas fa-bread-slice\" />\r\n                        </div>\r\n                        <p className=\"about-p\">\r\n                            It is a long established fact that a reader will be\r\n                            distracted by the readable content of a page when\r\n                            looking at its layout. The point of using Lorem\r\n                            Ipsum is that it has a more-or-less normal\r\n                            distribution of letters, as opposed to using\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutPasta;\r\n","import React from \"react\";\r\n\r\nconst SingleRecipe = () => {\r\n    return (\r\n        <div className=\"singleRecipe-card\">\r\n            <div className=\"card-img\" />\r\n            <button type=\"button\" id=\"single-recipe-btn\">\r\n                Recipe\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleRecipe;\r\n","import React, { Component } from \"react\";\r\nimport SingleRecipe from \"./SingleRecipe\";\r\nimport Title from \"./Title\";\r\n\r\nclass Catalogue extends Component {\r\n    state = {\r\n        recipes: [1, 5, 3, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n    };\r\n\r\n    recipes = () => {\r\n        if (!Boolean(this.state.recipes)) return null;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.recipes.map(x => {\r\n                    return <SingleRecipe />;\r\n                })}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catalogue-container\">\r\n                <Title>Catalogue</Title>\r\n                <div className=\"recipes-container\">{this.recipes()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Catalogue;\r\n","import React from \"react\";\nimport HomeHeader from \"./components/HomeHeader\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport TopRecipes from \"./components/TopRecipes\";\nimport AboutPasta from \"./components/AboutPasta\";\nimport Catalogue from \"./components/Catalogue\";\n\nclass App extends React.Component {\n    state = {\n        catalogue: \"\"\n    };\n\n    catalogue = boolean => {\n        this.setState({\n            catalogue: boolean\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => {\n                                return (\n                                    <React.Fragment>\n                                        <HomeHeader\n                                            catalogue={this.catalogue}\n                                            showCatalogue={this.state.catalogue}\n                                            location={props.location}\n                                        />\n                                        <TopRecipes />\n                                        <AboutPasta />\n                                    </React.Fragment>\n                                );\n                            }}\n                        />\n                        <Route\n                            exact\n                            path=\"/catalogue\"\n                            render={props => {\n                                return (\n                                    <React.Fragment>\n                                        <HomeHeader\n                                            catalogue={this.catalogue}\n                                            showCatalogue={this.state.catalogue}\n                                            location={props.location}\n                                        />\n                                        <Catalogue />\n                                    </React.Fragment>\n                                );\n                            }}\n                        />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}